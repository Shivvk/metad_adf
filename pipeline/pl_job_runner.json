{
	"name": "pl_job_runner",
	"properties": {
		"activities": [
			{
				"name": "set_job_id",
				"type": "SetVariable",
				"dependsOn": [],
				"policy": {
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"variableName": "v_job_id",
					"value": {
						"value": "@pipeline().RunId",
						"type": "Expression"
					}
				}
			},
			{
				"name": "initialize task",
				"type": "SqlServerStoredProcedure",
				"dependsOn": [
					{
						"activity": "set_job_id",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"storedProcedureName": "[control].[sp_init_job_control]",
					"storedProcedureParameters": {
						"job": {
							"value": {
								"value": "@pipeline().parameters.p_job",
								"type": "Expression"
							},
							"type": "String"
						},
						"job_id": {
							"value": {
								"value": "@variables('v_job_id')",
								"type": "Expression"
							},
							"type": "String"
						}
					}
				},
				"linkedServiceName": {
					"referenceName": "AzureSqlDatabase1",
					"type": "LinkedServiceReference"
				}
			},
			{
				"name": "get_enviornment_variable",
				"type": "Lookup",
				"dependsOn": [
					{
						"activity": "initialize task",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "AzureSqlSource",
						"sqlReaderQuery": "Select * from\n(\nselect parameter, value\nfrom config.enviornment) as i\npivot \n(\n max(value) for parameter in (subscription,rg,adf)) as o",
						"queryTimeout": "02:00:00",
						"partitionOption": "None"
					},
					"dataset": {
						"referenceName": "Ds_generic_sql_tables",
						"type": "DatasetReference"
					}
				}
			},
			{
				"name": "get task",
				"type": "Lookup",
				"dependsOn": [
					{
						"activity": "get_enviornment_variable",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "AzureSqlSource",
						"sqlReaderStoredProcedureName": "[control].[sp_get_tasks]",
						"storedProcedureParameters": {
							"job": {
								"type": "String",
								"value": {
									"value": "@pipeline().parameters.p_job",
									"type": "Expression"
								}
							},
							"job_id": {
								"type": "String",
								"value": {
									"value": "@variables('v_job_id')",
									"type": "Expression"
								}
							}
						},
						"queryTimeout": "02:00:00",
						"partitionOption": "None"
					},
					"dataset": {
						"referenceName": "Ds_generic_sql_tables",
						"type": "DatasetReference"
					}
				}
			},
			{
				"name": "run each task",
				"type": "ForEach",
				"dependsOn": [
					{
						"activity": "get task ",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"items": {
						"value": "@activity('get task ').output.values",
						"type": "Expression"
					},
					"isSequential": true,
					"activities": [
						{
							"name": "set_task_log",
							"type": "SetVariable",
							"dependsOn": [],
							"policy": {
								"secureOutput": false,
								"secureInput": false
							},
							"typeProperties": {
								"variableName": "v_task_log",
								"value": {
									"value": "@concat('Starting_task ',item().task)",
									"type": "Expression"
								}
							}
						},
						{
							"name": "log_task_start",
							"type": "SqlServerStoredProcedure",
							"dependsOn": [
								{
									"activity": "set_task_log",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"policy": {
								"timeout": "0.12:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"storedProcedureName": "[control].[sp_job_task_log]",
								"storedProcedureParameters": {
									"job": {
										"value": {
											"value": "@pipeline().parameters.p_job",
											"type": "Expression"
										},
										"type": "String"
									},
									"job_id": {
										"value": {
											"value": "@variables('v_job_id')",
											"type": "Expression"
										},
										"type": "String"
									},
									"job_status": {
										"value": "Running",
										"type": "String"
									},
									"status_description": {
										"value": {
											"value": "@variables('v_task_log')",
											"type": "Expression"
										},
										"type": "String"
									},
									"task": {
										"value": {
											"value": "@item().task",
											"type": "Expression"
										},
										"type": "String"
									},
									"task_id": {
										"value": "",
										"type": "String"
									},
									"task_sequence": {
										"value": {
											"value": "@item().task_sequence",
											"type": "Expression"
										},
										"type": "Int32"
									},
									"task_status": {
										"value": "SCHEDUCLED",
										"type": "String"
									}
								}
							},
							"linkedServiceName": {
								"referenceName": "AzureSqlDatabase1",
								"type": "LinkedServiceReference"
							}
						},
						{
							"name": "check_prior_task_status",
							"type": "SqlServerStoredProcedure",
							"dependsOn": [
								{
									"activity": "log_task_start",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"policy": {
								"timeout": "0.12:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"storedProcedureName": "[control].[sp_task_status]",
								"storedProcedureParameters": {
									"task_status": {
										"value": {
											"value": "@variables('v_task_status')",
											"type": "Expression"
										},
										"type": "String"
									}
								}
							},
							"linkedServiceName": {
								"referenceName": "AzureSqlDatabase1",
								"type": "LinkedServiceReference"
							}
						},
						{
							"name": "run_task",
							"type": "WebActivity",
							"dependsOn": [
								{
									"activity": "check_prior_task_status",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"policy": {
								"timeout": "0.12:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"url": {
									"value": "@concat(\n'https://management.azure.com/subscriptions/',\nactivity('get_enviornment_variable').output.firstRow.subscription,\n'/resourceGroups/',\nactivity('get_enviornment_variable').output.firstRow.rg,\n'/providers/Microsoft.DataFactory/factories/',\nactivity('get_enviornment_variable').output.firstRow.adf,\n'/pipelines/',\nitem().tasks,\n'/createRun?api-version=2018-06-01'\n)",
									"type": "Expression"
								},
								"method": "POST",
								"body": {
									"value": "@concat (\n'{ ',\n'\"p_job\" : \"', item().job,\n'\" , \"p_job_id\" : \"', variables('v_job_id'),\n'\" , \"p_task_sequence\" : \"', item().task_sequence,\n'\" }'\n)",
									"type": "Expression"
								},
								"authentication": {
									"type": "MSI",
									"resource": "https://management.azure.com"
								}
							}
						},
						{
							"name": "set_run_id",
							"type": "SetVariable",
							"dependsOn": [
								{
									"activity": "run_task",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"policy": {
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"variableName": "v_run_id",
								"value": {
									"value": "@activity('run_task').output.runid",
									"type": "Expression"
								}
							}
						},
						{
							"name": "check_task_stauts",
							"type": "ExecutePipeline",
							"dependsOn": [
								{
									"activity": "set_run_id",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"userProperties": [],
							"typeProperties": {
								"pipeline": {
									"referenceName": "pl_check_task_status",
									"type": "PipelineReference"
								},
								"waitOnCompletion": true,
								"parameters": {
									"p_run_id": {
										"value": "@variables('v_run_id')",
										"type": "Expression"
									},
									"p_job": {
										"value": "@variables('v_job_id')",
										"type": "Expression"
									}
								}
							}
						},
						{
							"name": "set success",
							"type": "SetVariable",
							"dependsOn": [
								{
									"activity": "check_task_stauts",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"policy": {
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": []
						},
						{
							"name": "set failure",
							"type": "SetVariable",
							"dependsOn": [
								{
									"activity": "check_task_stauts",
									"dependencyConditions": [
										"Failed"
									]
								}
							],
							"policy": {
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": []
						}
					]
				}
			},
			{
				"name": "Fail1",
				"type": "Fail",
				"dependsOn": [
					{
						"activity": "run each task",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": []
			}
		],
		"parameters": {
			"p_job": {
				"type": "string"
			}
		},
		"variables": {
			"v_job_id": {
				"type": "String"
			},
			"v_task_log": {
				"type": "String"
			},
			"v_task_status": {
				"type": "String"
			},
			"v_run_id": {
				"type": "String"
			}
		},
		"folder": {
			"name": "etl_metadata"
		},
		"annotations": []
	}
}